{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANJALI KUMARI\\\\Desktop\\\\onlinecompiler123\\\\code-compiler\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Editor from \"@monaco-editor/react\";\nimport Navbar from \"./Components/Navbar\";\nimport Axios from \"axios\";\nimport spinner from \"./spinner.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variable to set users source code\n  const [userCode, setUserCode] = useState(\"\");\n\n  // State variable to set editors default language\n  const [userLang, setUserLang] = useState(\"python\");\n\n  // State variable to set editors default theme\n  const [userTheme, setUserTheme] = useState(\"vs-dark\");\n\n  // State variable to set editors default font size\n  const [fontSize, setFontSize] = useState(20);\n\n  // State variable to set users input\n  const [userInput, setUserInput] = useState(\"\");\n\n  // State variable to set users output\n  const [userOutput, setUserOutput] = useState(\"\");\n  const [OutputError, setOutputError] = useState(\"\");\n\n  // Loading state variable to show spinner\n  // while fetching data\n  const [loading, setLoading] = useState(false);\n  const options = {\n    fontSize: fontSize\n  };\n\n  // Function to call the compile endpoint\n  function compile() {\n    setLoading(true);\n    if (userCode === ``) {\n      return;\n    }\n\n    // Post request to compile endpoint\n    Axios.post(`http://localhost:8000/compile`, {\n      code: userCode,\n      language: userLang,\n      input: userInput\n    }).then(res => {\n      setUserOutput(res.data.output);\n      setOutputError(res.data.error);\n    }).then(() => {\n      setLoading(false);\n    });\n  }\n\n  // Function to clear the output screen\n  function clearOutput() {\n    setUserOutput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      userLang: userLang,\n      setUserLang: setUserLang,\n      userTheme: userTheme,\n      setUserTheme: setUserTheme,\n      fontSize: fontSize,\n      setFontSize: setFontSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-container\",\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          options: options,\n          height: \"calc(100vh - 50px)\",\n          width: \"100%\",\n          theme: userTheme,\n          language: userLang,\n          defaultLanguage: \"python\",\n          defaultValue: \"# Enter your code here\",\n          onChange: value => {\n            setUserCode(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"run-btn\",\n          onClick: () => compile(),\n          children: \"Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"code-inp\",\n            onChange: e => setUserInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: spinner,\n            alt: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            children: userOutput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: OutputError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              clearOutput();\n            },\n            className: \"clear-btn\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y/W4zxqjMB/5KZqPDMutlq3/csE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Editor","Navbar","Axios","spinner","jsxDEV","_jsxDEV","App","_s","userCode","setUserCode","userLang","setUserLang","userTheme","setUserTheme","fontSize","setFontSize","userInput","setUserInput","userOutput","setUserOutput","OutputError","setOutputError","loading","setLoading","options","compile","post","code","language","input","then","res","data","output","error","clearOutput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","theme","defaultLanguage","defaultValue","onChange","value","onClick","id","e","target","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ANJALI KUMARI/Desktop/onlinecompiler123/code-compiler/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Editor from \"@monaco-editor/react\";\nimport Navbar from \"./Components/Navbar\";\nimport Axios from \"axios\";\nimport spinner from \"./spinner.png\";\n\nfunction App() {\n  // State variable to set users source code\n  const [userCode, setUserCode] = useState(\"\");\n\n  // State variable to set editors default language\n  const [userLang, setUserLang] = useState(\"python\");\n\n  // State variable to set editors default theme\n  const [userTheme, setUserTheme] = useState(\"vs-dark\");\n\n  // State variable to set editors default font size\n  const [fontSize, setFontSize] = useState(20);\n\n  // State variable to set users input\n  const [userInput, setUserInput] = useState(\"\");\n\n  // State variable to set users output\n  const [userOutput, setUserOutput] = useState(\"\");\n\n  const [OutputError, setOutputError] = useState(\"\");\n\n  // Loading state variable to show spinner\n  // while fetching data\n  const [loading, setLoading] = useState(false);\n\n  const options = {\n    fontSize: fontSize,\n  };\n\n  // Function to call the compile endpoint\n  function compile() {\n    setLoading(true);\n    if (userCode === ``) {\n      return;\n    }\n\n    // Post request to compile endpoint\n    Axios.post(`http://localhost:8000/compile`, {\n      code: userCode,\n      language: userLang,\n      input: userInput,\n    })\n      .then((res) => {\n        setUserOutput(res.data.output);\n        setOutputError(res.data.error);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }\n\n  // Function to clear the output screen\n  function clearOutput() {\n    setUserOutput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        userLang={userLang}\n        setUserLang={setUserLang}\n        userTheme={userTheme}\n        setUserTheme={setUserTheme}\n        fontSize={fontSize}\n        setFontSize={setFontSize}\n      />\n      <div className=\"main\">\n        <div className=\"left-container\">\n          <Editor\n            options={options}\n            height=\"calc(100vh - 50px)\"\n            width=\"100%\"\n            theme={userTheme}\n            language={userLang}\n            defaultLanguage=\"python\"\n            defaultValue=\"# Enter your code here\"\n            onChange={(value) => {\n              setUserCode(value);\n            }}\n          />\n          <button className=\"run-btn\" onClick={() => compile()}>\n            Run\n          </button>\n        </div>\n        <div className=\"right-container\">\n          <h4>Input:</h4>\n          <div className=\"input-box\">\n            <textarea\n              id=\"code-inp\"\n              onChange={(e) => setUserInput(e.target.value)}\n            ></textarea>\n          </div>\n          <h4>Output:</h4>\n          {loading ? (\n            <div className=\"spinner-box\">\n              <img src={spinner} alt=\"Loading...\" />\n            </div>\n          ) : (\n            <div className=\"output-box\">\n              <pre>{userOutput}</pre>\n              <pre>{OutputError}</pre>\n              <button\n                onClick={() => {\n                  clearOutput();\n                }}\n                className=\"clear-btn\"\n              >\n                Clear\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}